<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://hdxgithub.github.io/"/>
  <updated>2018-09-08T13:31:48.590Z</updated>
  <id>https://hdxgithub.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PageName</title>
    <link href="https://hdxgithub.github.io/2018/09/08/PageName-1/"/>
    <id>https://hdxgithub.github.io/2018/09/08/PageName-1/</id>
    <published>2018-09-08T13:31:48.000Z</published>
    <updated>2018-09-08T13:31:48.590Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PageName</title>
    <link href="https://hdxgithub.github.io/2018/09/08/PageName/"/>
    <id>https://hdxgithub.github.io/2018/09/08/PageName/</id>
    <published>2018-09-08T13:31:37.000Z</published>
    <updated>2018-09-08T13:31:37.854Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://hdxgithub.github.io/2018/08/21/%E5%87%BD%E6%95%B0%EF%BC%8C%E5%8F%82%E6%95%B0%E5%8F%8A%E5%8F%82%E6%95%B0%E7%BB%93%E6%9E%84%EF%BC%9A%E7%BB%83%E4%B9%A0/"/>
    <id>https://hdxgithub.github.io/2018/08/21/函数，参数及参数结构：练习/</id>
    <published>2018-08-21T14:51:41.932Z</published>
    <updated>2018-08-21T14:50:42.287Z</updated>
    
    <content type="html"><![CDATA[<h3 id="函数，参数及参数结构：练习"><a href="#函数，参数及参数结构：练习" class="headerlink" title="函数，参数及参数结构：练习"></a>函数，参数及参数结构：练习</h3><p>####1,编写一个函数，能够接受至少2个参数，返回最小值和最大值;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">def double_values(*nums):#元祖的形式</span><br><span class="line">    return max(nums),min(nums)</span><br><span class="line">    </span><br><span class="line">double_values(1,2,3)</span><br><span class="line"></span><br><span class="line">(3,1)#运行结果</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import random </span><br><span class="line">def double_values(*nums):</span><br><span class="line">    print(nums)</span><br><span class="line">    return max(nums),min(nums)</span><br><span class="line">print(*double_values(*[random.randint(10,20) for _ in range(10)]))</span><br><span class="line">#在10到20的范围随机取10个数，打印出选择的随机数，和最大值和最小值</span><br></pre></td></tr></table></figure><p>####2， 编写一个函数，接受一个参数n，n为正整数，左右两种打印方式。要求数字必须对齐</p><ul><li>思路一 一行行打印，前面追加空格，每一个空格的宽度等于数字字符串的宽度。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#两个for循环第一个for循环，循环层数。第二个循环，循环空格，每一个空格的宽度等于数字字符串的宽度。j是倒着打印的，当j和i相等时打印数字。到这打印0取不到前包后不包</span><br><span class="line">def triangle_print(n):</span><br><span class="line">    for i in range(1,n+1):</span><br><span class="line">        for j in range(n,0,-1):</span><br><span class="line">            if i &lt; j:#1&lt;11</span><br><span class="line">                print(&apos; &apos;*len(str(j)),end = &apos; &apos;)</span><br><span class="line">            else:</span><br><span class="line">                print(j,end = &apos; &apos;)</span><br><span class="line">        print()</span><br><span class="line">        </span><br><span class="line">triangle_print(12)</span><br><span class="line">                         1 </span><br><span class="line">                       2 1 </span><br><span class="line">                     3 2 1 </span><br><span class="line">                   4 3 2 1 </span><br><span class="line">                 5 4 3 2 1 </span><br><span class="line">               6 5 4 3 2 1 </span><br><span class="line">             7 6 5 4 3 2 1 </span><br><span class="line">           8 7 6 5 4 3 2 1 </span><br><span class="line">         9 8 7 6 5 4 3 2 1 </span><br><span class="line">      10 9 8 7 6 5 4 3 2 1 </span><br><span class="line">   11 10 9 8 7 6 5 4 3 2 1 </span><br><span class="line">12 11 10 9 8 7 6 5 4 3 2 1</span><br></pre></td></tr></table></figure><p>思路二 右对齐方式。右对齐，最大的问题不知道最后一行多宽？先算出最后一行，知道了宽度，采用右对齐打印，最后补上最后一行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#1,打印最后一行（一个数字加一个空格）。里面有一个循环</span><br><span class="line">#2,从第一行打印到n-1行，向右对齐，宽度为n</span><br><span class="line">def triangle_print(n):</span><br><span class="line">    tail = &quot; &quot;.join([str(i) for i in range(n,0,-1)])#1</span><br><span class="line">    width = len(tail)</span><br><span class="line">    for i in range(1,n):</span><br><span class="line">        print(&quot;&#123;:&gt;&#123;&#125;&#125;&quot;.format(&quot; &quot;.join([str(j) for j in range(i,0,-1)]),width))#2,</span><br><span class="line">    print(tail)</span><br><span class="line">triangle_print(15)</span><br><span class="line"></span><br><span class="line">                                  1</span><br><span class="line">                                2 1</span><br><span class="line">                              3 2 1</span><br><span class="line">                            4 3 2 1</span><br><span class="line">                          5 4 3 2 1</span><br><span class="line">                        6 5 4 3 2 1</span><br><span class="line">                      7 6 5 4 3 2 1</span><br><span class="line">                    8 7 6 5 4 3 2 1</span><br><span class="line">                  9 8 7 6 5 4 3 2 1</span><br><span class="line">               10 9 8 7 6 5 4 3 2 1</span><br><span class="line">            11 10 9 8 7 6 5 4 3 2 1</span><br><span class="line">         12 11 10 9 8 7 6 5 4 3 2 1</span><br><span class="line">      13 12 11 10 9 8 7 6 5 4 3 2 1</span><br><span class="line">   14 13 12 11 10 9 8 7 6 5 4 3 2 1</span><br><span class="line">15 14 13 12 11 10 9 8 7 6 5 4 3 2 1</span><br></pre></td></tr></table></figure><p>思路三<br>基于思路二，能够每一行不重新计算，基于tail等到？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def triangle_print(n):</span><br><span class="line">    tail = &apos; &apos;.join(str(i) for i in range(n, 0, -1))</span><br><span class="line">    width = len(tail)</span><br><span class="line">    start = -1</span><br><span class="line">    step = 2</span><br><span class="line">    points = &#123;10*i for i in range(1,3)&#125; # 与其判断两位数、三位数，还不如算好临界值</span><br><span class="line">    for i in range(1, n+1):</span><br><span class="line">        print(&apos;&#123;:&gt;&#123;&#125;&#125;&apos;.format(tail[start:], width))</span><br><span class="line">        if i+1 in points:</span><br><span class="line">            step += 1</span><br><span class="line">        start = start - step</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">下三角</span><br><span class="line"> </span><br><span class="line">12 11 10 9 8 7 6 5 4 3 2 1</span><br><span class="line">   11 10 9 8 7 6 5 4 3 2 1</span><br><span class="line">      10 9 8 7 6 5 4 3 2 1</span><br><span class="line">         9 8 7 6 5 4 3 2 1</span><br><span class="line">           8 7 6 5 4 3 2 1</span><br><span class="line">             7 6 5 4 3 2 1</span><br><span class="line">               6 5 4 3 2 1</span><br><span class="line">                 5 4 3 2 1</span><br><span class="line">                   4 3 2 1</span><br><span class="line">                     3 2 1</span><br><span class="line">                       2 1</span><br><span class="line">                         1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def showtail(n):</span><br><span class="line">    tail = &quot; &quot;.join([str(i) for i in range(n,0,-1)])</span><br><span class="line">    print(tail)</span><br><span class="line">     # 无需再次生成列表</span><br><span class="line">    for i in range(len(tail)):</span><br><span class="line">        if tail[i] == &apos; &apos;:</span><br><span class="line">            print(&apos; &apos;*i,tail[i+1:])</span><br><span class="line">showtail(12)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#核心思想 遇到一个空格，就把前面全部补成空格后面数字和空格全部打印。</span><br><span class="line">由此，可以得到上三角另一种思路</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def triangle_print(n):</span><br><span class="line">    tail = &apos; &apos;.join(str(i) for i in range(n, 0, -1))</span><br><span class="line">    width = len(tail)</span><br><span class="line">    for i in range(-1, -width-1, -1):</span><br><span class="line">        if tail[i] == &apos; &apos;:</span><br><span class="line">            print(&apos; &apos;*(width+i),tail[i+1:])</span><br><span class="line">    print(tail)</span><br></pre></td></tr></table></figure><p>####3 , 笔记</p><ul><li>join()</li></ul><ul><li><p>[ ] <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#&quot;string&quot;.join(iterable) -&gt;str（返回一个新的字符串）</span><br><span class="line">#将可迭代对象连接起来，使用string作为分隔符</span><br><span class="line">#可迭代对象本身元素都是字符串</span><br><span class="line">#返回一个新字符串</span><br><span class="line">#可迭代对象里面的元素必须是字符串才行，如果不是需要转化成字符串。不然会抛异常。用str函数强制转换成字符串</span><br><span class="line"></span><br><span class="line">Python join()方法用于将序列中的元素以指定的字符连接生成一个新的字符串</span><br><span class="line">语法：str.join(sequence);sequence--要连接的元素序列</span><br><span class="line">返回值：返回通过指定字符连接序列中元素后生成的最新字符串</span><br><span class="line">sequence：（元祖，列表，字典，字符串）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">seq = &#123;&apos;hello&apos;:&apos;nihao&apos;,&apos;good&apos;:2,&apos;boy&apos;:3,&apos;doiido&apos;:4&#125;</span><br><span class="line">print(&apos;-&apos;.join(seq))        #字典只对键进行连接</span><br><span class="line">结果：hello-good-boy-doiido</span><br></pre></td></tr></table></figure></p><ul><li>format</li></ul></li><li><p>[ ] <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#格式化字符串的函数str,format()</span><br><span class="line">#format 函数可以接受不限个参数，位置可以不按顺序。</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;&quot;&#123;&#125; &#123;&#125;&quot;.format(&quot;hello&quot;, &quot;world&quot;)    # 不设置指定位置，按默认顺序</span><br><span class="line">&apos;hello world&apos;</span><br><span class="line"> </span><br><span class="line">&gt;&gt;&gt; &quot;&#123;0&#125; &#123;1&#125;&quot;.format(&quot;hello&quot;, &quot;world&quot;)  # 设置指定位置</span><br><span class="line">&apos;hello world&apos;</span><br><span class="line"> </span><br><span class="line">&gt;&gt;&gt; &quot;&#123;1&#125; &#123;0&#125; &#123;1&#125;&quot;.format(&quot;hello&quot;, &quot;world&quot;)  # 设置指定位置</span><br><span class="line">&apos;world hello world&apos;</span><br><span class="line"></span><br><span class="line"># 通过字典设置参数</span><br><span class="line">site = &#123;&quot;name&quot;: &quot;菜鸟教程&quot;, &quot;url&quot;: &quot;www.runoob.com&quot;&#125;</span><br><span class="line">print(&quot;网站名：&#123;name&#125;, 地址 &#123;url&#125;&quot;.format(**site))</span><br><span class="line"> </span><br><span class="line"># 通过列表索引设置参数</span><br><span class="line">my_list = [&apos;菜鸟教程&apos;, &apos;www.runoob.com&apos;]</span><br><span class="line">print(&quot;网站名：&#123;0[0]&#125;, 地址 &#123;0[1]&#125;&quot;.format(my_list))  # &quot;0&quot; 是必须的</span><br></pre></td></tr></table></figure></p></li></ul><table><thead><tr><th style="text-align:center">数字</th><th style="text-align:center">格式</th><th style="text-align:center">输出</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">3.1415926</td><td style="text-align:center">{:.2f}</td><td style="text-align:center">3.14</td><td>保留小数点后两位</td></tr><tr><td style="text-align:center">3.1415926</td><td style="text-align:center">{:+.2f}</td><td style="text-align:center">+3.14</td><td>带符号保留小数点后两位</td></tr><tr><td style="text-align:center">-1</td><td style="text-align:center">{:+.2f}</td><td style="text-align:center">-1.00</td><td>带符号保留小数点后两位</td></tr><tr><td style="text-align:center">2.71828</td><td style="text-align:center">{:.0f}</td><td style="text-align:center">3</td><td>不带小数</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">{:0&gt;2d}</td><td style="text-align:center">05</td><td>数字补零 (填充左边, 宽度为2)</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">{:x&lt;4d}</td><td style="text-align:center">5xxx</td><td>数字补x (填充右边, 宽度为4)</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">{:x&lt;4d}</td><td style="text-align:center">10xx</td><td>数字补x (填充右边, 宽度为4)</td></tr><tr><td style="text-align:center">1000000</td><td style="text-align:center">{:,}</td><td style="text-align:center">1,000,000</td><td>以逗号分隔的数字格式</td></tr><tr><td style="text-align:center">0.25</td><td style="text-align:center">{:.2%}</td><td style="text-align:center">25.00%</td><td>百分比格式</td></tr><tr><td style="text-align:center">1000000000</td><td style="text-align:center">{:.2e}</td><td style="text-align:center">1.00e+09</td><td>指数记法</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">‘{:b}’.format(11)<br>‘{:d}’.format(11)<br>‘{:o}’.format(11)<br>‘{:x}’.format(11)<br>‘{:#x}’.format(11)<br></td><td style="text-align:center">1011 <br>11 <br>13<br> b <br>0xb<br> 0XB</td><td>进制</td></tr></tbody></table><p>^, &lt;, &gt; 分别是居中、左对齐、右对齐，后面带宽度， : 号后面带填充的字符，只能是一个字符，不指定则默认是用空格填充。</p><ul><li>表示在正数前显示 +，负数前显示 -；  （空格）表示在正数前加空格</li></ul><p>b、d、o、x 分别是二进制、十进制、八进制、十六进制。</p><p>此外我们可以使用大括号 {} 来转义大括号，如下实例：</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;函数，参数及参数结构：练习&quot;&gt;&lt;a href=&quot;#函数，参数及参数结构：练习&quot; class=&quot;headerlink&quot; title=&quot;函数，参数及参数结构：练习&quot;&gt;&lt;/a&gt;函数，参数及参数结构：练习&lt;/h3&gt;&lt;p&gt;####1,编写一个函数，能够接受至少2个参数，返回
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://hdxgithub.github.io/2018/08/21/random()%E6%A8%A1%E5%9D%97/"/>
    <id>https://hdxgithub.github.io/2018/08/21/random()模块/</id>
    <published>2018-08-21T11:22:30.147Z</published>
    <updated>2018-08-21T00:50:54.314Z</updated>
    
    <content type="html"><![CDATA[<h3 id="random-模块"><a href="#random-模块" class="headerlink" title="random()模块"></a>random()模块</h3><p>random()方法返回随机生成的一个实数，它在[0,1)范围内</p><ul><li>语法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import random</span><br><span class="line">random.random()</span><br><span class="line"></span><br><span class="line">0.6535201075880449#在[0,1)中随机产生一个数</span><br></pre></td></tr></table></figure><p>注意：random()是不能直接访问的，需要导入random模块，然后通过random静态对象调用该方法。</p><ul><li>返回值<br>返回随机生成的一个实数，它在[0，1)范围内。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import random#导入random模块</span><br><span class="line"></span><br><span class="line">random.randint(a,b)</span><br><span class="line">#返回[a,b]之间的整数。产生一个整型随机数。/用于指定范围内的整数。a是上限，b是下限。是一个闭区间。/返回[a,b]之间的整数/</span><br><span class="line"></span><br><span class="line">random.random()</span><br><span class="line">#产生0到1之间的随机浮点数。前闭区间后开区间</span><br><span class="line"></span><br><span class="line">random.randrange([start,]stop[,step])</span><br><span class="line">#从指定范围内，按指定基数递增的集合获取一个随机数，基数缺省值为1.如random.randrange(1,100,2)生产从1到100的间隔为2的随机整数。前包后不包。[0,1)</span><br><span class="line"></span><br><span class="line">a = [1,3,5,7]#将序列a中的元素顺序打乱</span><br><span class="line">random.shuffle(a)#用于将一个列表中的元素打乱，即将列表内的元素随机排列。/随机洗牌。就地修改。</span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line">random.sample(sequence)</span><br><span class="line">#从样本空间或总体（序列或者集合类型）中随机选取k个不同的元素，返回一个新的列表。sample函数不会修改原有序列。/从指定序列中随机获取指定长度的片段并随机排列。/list,tuple,字符串都属于sequence。参数sequence表示一个有序类型。/可以理解为在一个货架上拿出不同型号的元素</span><br><span class="line"></span><br><span class="line">random.choice()</span><br><span class="line">#从非空序列的元素中随机挑选一个元素，如：random.choice(range(10)),从0到9中随机挑选一个整数。random.choice([1,3,5,7])./从序列中随机选取一个元素/伪随机，假随机。在里面拿出来，东西还在里面。</span><br><span class="line"></span><br><span class="line">random.uniform(a,b)</span><br><span class="line">#用于生成一个指定范围内的随机浮点数，两个参数一个是上限一个是下限。是闭区间。/区间可以不是整数</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># 1、求和（正确）</span><br><span class="line"># 对下面集合中随机取数字，要求取出的数字是3的倍数但不能是4的倍数，成功取到10个数字并对取到的所有数字求和输出</span><br><span class="line">a = &#123;5,10,3,8,6,10,9,15,24,30,27,48,24&#125;#类型是set</span><br><span class="line">a1 = list(a)#转换成列表形式@@@@@@@@列表转换不熟悉</span><br><span class="line">a3 = 0</span><br><span class="line">count = 0#计数</span><br><span class="line">count2 = 0#计数</span><br><span class="line">lst1 = []</span><br><span class="line">lst2 = []</span><br><span class="line"></span><br><span class="line">while True:                   #循环因为要成功取到10个数</span><br><span class="line">    a2 = random.choice(a1)#随机抽取一个数</span><br><span class="line">    lst1.append(a2)#每次取的数</span><br><span class="line">    count2 +=1#取了多少个数</span><br><span class="line">    if a2 % 3 == 0:</span><br><span class="line">        if a2 % 4 != 0:#如果能整除3不能整除4</span><br><span class="line">            lst2.append(a2)</span><br><span class="line">            a3 += a2</span><br><span class="line">            count += 1</span><br><span class="line">    if count == 10:</span><br><span class="line">        break</span><br><span class="line">print(lst1)#随机取到的数</span><br><span class="line">print(lst2)#符合要求的10个数</span><br><span class="line">print(a3)#10个数总和</span><br><span class="line">print(count2,count)#取了22个数，只有10个数是符合</span><br><span class="line"></span><br><span class="line">[15, 6, 10, 30, 10, 10, 24, 5, 8, 10, 6, 8, 15, 15, 24, 8, 27, 8, 30, 48, 9, 6]</span><br><span class="line">[15, 6, 30, 6, 15, 15, 27, 30, 9, 6]</span><br><span class="line">159</span><br><span class="line">22 10</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#1、求和（错误）（第一次思路）</span><br><span class="line">#对下面集合中随机取数字，要求取出的数字是3的倍数但不能是4的倍数，成功取到10个数字并对取到的所有数字求和输出</span><br><span class="line">import random</span><br><span class="line">p = []</span><br><span class="line">count = 0</span><br><span class="line">m = 0</span><br><span class="line">p2 = []</span><br><span class="line">for i in &#123;5,10,3,8,6,10,9,15,24,30,27,48,24&#125;:</span><br><span class="line">    p.append(i)</span><br><span class="line">    p1 = random.choice(p)</span><br><span class="line">    flag = True</span><br><span class="line">    if p1 % 3 == 0:</span><br><span class="line">        if p1 % 4 == 0:</span><br><span class="line">            flag = False</span><br><span class="line">        else:</span><br><span class="line">#             p2.append(p1)</span><br><span class="line">            m += p1</span><br><span class="line">            count += 1</span><br><span class="line">    if count &gt; 10:</span><br><span class="line">        break</span><br><span class="line">#     else:</span><br><span class="line">print(m)</span><br><span class="line">print(count)</span><br><span class="line"></span><br><span class="line">57#总和</span><br><span class="line">8#8次</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#错误写法</span><br><span class="line">#第一次的思路</span><br><span class="line">import random</span><br><span class="line">p = []</span><br><span class="line">count = 0</span><br><span class="line">m = 0</span><br><span class="line">p2 = []</span><br><span class="line">for i in &#123;5,10,3,8,6,10,9,15,24,30,27,48,24&#125;:</span><br><span class="line">    p.append(i)</span><br><span class="line">    p1 = random.choice(p)</span><br><span class="line">    flag = True</span><br><span class="line">    if p1 % 3 == 0:</span><br><span class="line">        if p1 % 4 == 0:</span><br><span class="line">            flag = False</span><br><span class="line">        else:</span><br><span class="line">#             p2.append(p1)</span><br><span class="line">            m += p1</span><br><span class="line">            count += 1</span><br><span class="line">    if count &gt; 10:</span><br><span class="line">        break</span><br><span class="line">#     else:</span><br><span class="line">print(m)</span><br><span class="line">print(count)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># print(p1)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"># if p1 % 3 == 0:</span><br><span class="line">#     if p1 % 4 == 0:</span><br><span class="line">#         break</span><br><span class="line">#     else:</span><br><span class="line">#         m += i</span><br><span class="line">#         count += 1</span><br><span class="line"># if count &gt; 10:</span><br><span class="line">#     print(m)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#错误（第一次思路）</span><br><span class="line">n = &#123;5,10,3,8,6,10,9,15,24,30,27,48,24&#125;</span><br><span class="line">count = 0</span><br><span class="line">m = 0</span><br><span class="line">for _ in n:</span><br><span class="line">    if _ % 3 == 0:</span><br><span class="line">        if _ % 4 == 0:</span><br><span class="line">            continue</span><br><span class="line">        else:</span><br><span class="line">            m += _</span><br><span class="line">            count += 1</span><br><span class="line">print(m)</span><br><span class="line">print(count)</span><br><span class="line">#     if count &gt; 10:</span><br><span class="line">#         print(m)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">总结：</span><br><span class="line">#第一点</span><br><span class="line">a1 = []</span><br><span class="line">a = &#123;5,10,3,8,6,10,9,15,24,30,27,48,24&#125;#set类型</span><br><span class="line">for i in a:</span><br><span class="line">a1.append(i)</span><br><span class="line">等效于</span><br><span class="line">a = &#123;5,10,3,8,6,10,9,15,24,30,27,48,24&#125;</span><br><span class="line">a1 = list(a)</span><br><span class="line">列表表示形式需要注意</span><br><span class="line">#第二点</span><br><span class="line">import random</span><br><span class="line">a2 = random.choice(a1)</span><br><span class="line">#这是随机取一个数</span><br><span class="line">前面要加循环</span><br><span class="line">while True:#或</span><br><span class="line">for i in range(100):#因为不知道取多少次才会取10个符合的数</span><br><span class="line">#第三点</span><br><span class="line">if i % 4 != 0；#如果i不能被4整除。’！=‘不等于。可以不写成if...else了，更加方便</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;random-模块&quot;&gt;&lt;a href=&quot;#random-模块&quot; class=&quot;headerlink&quot; title=&quot;random()模块&quot;&gt;&lt;/a&gt;random()模块&lt;/h3&gt;&lt;p&gt;random()方法返回随机生成的一个实数，它在[0,1)范围内&lt;/p&gt;
&lt;ul
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>字符串</title>
    <link href="https://hdxgithub.github.io/2018/08/20/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>https://hdxgithub.github.io/2018/08/20/字符串/</id>
    <published>2018-08-20T07:28:00.000Z</published>
    <updated>2018-08-11T08:08:30.559Z</updated>
    
    <content type="html"><![CDATA[<h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>字符串是一个序列，而且是不可变的，因为它是字面常量。</p><p>一个字符串一旦定义好就不能改变，因为它是一个字面常量。加出来的它是一个新的字符串和原来的字符串根本就没有关系，因为在内存中的地址根本就不一样。字符串是由一个一个字符组成，一个有序的数列。有序就可以迭代。有序就可以给它编号就支持索引，也支持负索引。</p><p>字符串是不可变对象；不可变的字面常量；是一个有顺序的序列；</p><p>字符串支持使用索引访问；</p><p>冒泡法；快速排序；排序算法；</p><h4 id="字符串定义-初始化"><a href="#字符串定义-初始化" class="headerlink" title="字符串定义  初始化"></a>字符串定义  初始化</h4><p>要注意转义字符；如果不想让它转译就加上一个r前缀；</p><p>r前缀里面东西不做特殊处理；</p><p>三引号要注意的是它里面是可以换行的。把换行符也记录下来。这是三引号的特点。</p><h4 id="字符串元素访问–下标"><a href="#字符串元素访问–下标" class="headerlink" title="字符串元素访问–下标"></a>字符串元素访问–下标</h4><p>字串支持使用索引访问(可以通过下标拿出一个一个字符，但是它本身类型也是字符串的；哪怕只有一个字符也是字符串类型)</p><p>sql = “seclect * from user where name=’tom’”</p><p>sql[4]#字符串‘c’</p><p>sql[4] =  ‘o’</p><p>有序的字符集合，字符序列</p><p>for c in sql:</p><p>print(c)</p><p>print(type(c))#什么类型？</p><p>可迭代</p><p>lst = list(sql)</p><p>空格也属于字符串</p><p>可迭代：因为它是有顺序的；</p><h4 id="字符串join连接"><a href="#字符串join连接" class="headerlink" title="字符串join连接*"></a>字符串join连接*</h4><ul><li><p>将可迭代对象连接起来，使用string作为分隔符；</p></li><li><p>可迭代对象本身元素都是字符串</p></li><li><p>返回一个新字符串</p><p>join方法实际上是对一个可迭代对象操作，但是要求可迭代对象它里面元素必须是字符串，不是字符串会抛异常。这就要求把里面的元素强制转换成字符串。用str函数转换。什么样的对象都可以转换成字符串。（包括自定义的也可以转换）可以理解为所有对象都应该有字符串的表达形式。 </p><p>加法等拼接完以后返回一个新的字符串。</p></li></ul><p>‘’.join+（元素为字符串）的可迭代对象；“里面是分隔符；</p><p>+代表将两个字符串连接在一起，形成一个新字符串；</p><h4 id="字符串分割"><a href="#字符串分割" class="headerlink" title="字符串分割"></a>字符串分割</h4><p>字符串分割的方法分为两类：</p><ul><li>split系<ul><li>split(sep=None,maxsplit=-1)-&gt; list of  strings</li><li>将字符串按照分隔符分割成若干字符串，并返回列表</li><li>从左至右</li><li>sep指定分隔字符串，缺省的情况下空白字符串作为分隔符</li><li>maxsplit指定分割的次数，-1表示遍历整个字符串</li><li>split（none,-1)-1代表能切几刀切几刀；</li><li>切入点你的东西就不要了（特点就是分隔符不了）</li><li>rsqlit:从右面开始切，切完以后还是按照返回的还是原来字符串顺序，不会改变。</li><li>append返回none</li><li>\n换行符：sqlitlines:一行一行切；</li><li>常见换行符\r，\n，\r\n</li><li>从左至右；<ul><li>splitlines([Keepends])-&gt;list of strings<ul><li>keepends指的是是否保留行分隔符</li><li>行分隔符包括\n,\r\n,\r等</li><li>按照行来切分字符串</li><li>会返回一行行数据，每一行就是列表中的一个元素</li></ul></li></ul></li></ul></li></ul><p>sep指定分隔符，缺省的情况下空白字符串作为分隔符,没有指定分隔符的时候就是空白字符，尽可能多的切，至少一个包括\n\t\r这种。</p><ul><li>partition系</li></ul><ul><li>将字符串按照分隔符分割成2段，返回这2段和分隔符的元组 </li><li>从左至右，遇到分隔符就把字符串分割成两部分</li><li>没有找到分隔符，就返回头，2个空元素的三元组</li><li>sep分割字符串 ，必须指定</li></ul><p>指定只切一刀，返回带上分隔符，返回的是一个元组。（三元组，右半部分，分隔符，左半部分）</p><p>一刀两断用，只切一刀。</p><p>’1ab2ab3ab4‘.partition(’ab’)</p><p>(‘1’,’ab’,’2ab3ab4ab’)</p><p>字符串相加效率不会太差</p><p>注意：看隐含条件</p><ul><li>rpartition(sep)-&gt;(head,sep,tail)<ul><li>从左至右，遇到分隔符就把字符串分割成两部分，返回头，分隔符，尾三部分的三元组；如果没有找到分隔符，就返回2个空元素和尾的三元组。</li></ul></li></ul><h4 id="字符串大小写"><a href="#字符串大小写" class="headerlink" title="字符串大小写"></a>字符串大小写</h4><p>upper()</p><ul><li>全大写</li></ul><p>lower()</p><ul><li>全小写</li></ul><p>大小写，做判断的时候用</p><p>swapcase()</p><ul><li>交互大小写</li></ul><p>用户在输入时不知道是大小写所以进行转换；</p><p>uppper()</p><p>全大写</p><p>lower()</p><p>全小写</p><p>大小写，做判断的时候用</p><p>swapcase()</p><p>交互大小写</p><h4 id="字符串排版"><a href="#字符串排版" class="headerlink" title="字符串排版"></a>字符串排版</h4><p>title()-&gt;str</p><ul><li>标题的每个单词都大写</li><li>title：标题的每个单词都大写</li></ul><p>capitalize()-&gt;str</p><ul><li>首个单词大写</li><li>capitalize：首个单词大写</li></ul><p>center(width[,fillchar])-&gt;str</p><ul><li>width打印宽度</li><li>fillchar填充字符</li></ul><p>center（width【，fillchar】—）</p><p>举例：a = ‘<a href="http://www.0310dreamboy.com&#39;" target="_blank" rel="noopener">www.0310dreamboy.com&#39;</a></p><p>a.center(30);</p><p>a.center(30,‘@’)</p><p>zfill(width)-&gt;str</p><ul><li>zfill(width):width打印宽度，居右，左边用0填充。</li><li>ljust(width[,fillchar]):str左对齐</li><li>rjust(width[,fillchar]):str右对齐</li><li>中文用的少，了解一下</li></ul><h4 id="字符串修改"><a href="#字符串修改" class="headerlink" title="字符串修改*"></a>字符串修改*</h4><ul><li><p>replace(old,new[,count]) - &gt; str:old:要替换的；new：</p><ul><li>字符串中找到匹配替换为新子串，返回新字符串</li><li>count表示替换几次，不指定就是全部替换</li><li>返回一个新的字符串，原字符串是不可变的</li></ul></li><li><p>strip([chars])-&gt;str</p><ul><li>从字符串两端去除指定的字符集chars中的所有字符</li><li>如果chars没有指定，去除两端的空白字符</li></ul></li></ul><p>strip之后返回一个新的字符串；空白字符指\t\n\r和空格。空字符串指引号什么也没有的字符串</p><p> lstrip([chars])-&gt;str</p><ul><li>从左开始</li></ul><p>rstrip([chars])-&gt;str</p><ul><li>从右开始</li></ul><h4 id="字符串查找"><a href="#字符串查找" class="headerlink" title="字符串查找*"></a>字符串查找*</h4><p>find(sub[,start[,end]])-&gt;int:</p><ul><li>在指定的区间[start，end），从左至右，查找子串sub。找到返回索引，没找到返回-1</li></ul><p>rfind(sub[,start[,end]])-&gt;int</p><ul><li>在指定的区间[start,end),从左至右，查找子串sub。找到返回索引，没找到返回-1</li></ul><p>返回负数就是在制定的区间内 没找到‘。超界返回负数</p><p>index（sub【，sart【，end】】）-&gt;int</p><p>没找到抛出异常Value Error，扎到返回索引/</p><p>时间复杂度</p><ul><li>时间复杂度index和count方法都是O（n）</li><li>随着列表数据规模的增大，而效率下降</li></ul><p>len（string）</p><ul><li>返回字符串的长度，即字符的个数</li></ul><p>count统计出现几次；</p><ul><li>is<ul><li>isalnum:返回bool值是否是字母和数字组成；</li><li>isalpha：是否是字母</li><li>isdecimal：是否只包含十进制数字</li><li>isdigit：是否全部数字</li><li>reversed在列表中倒着拿；reverse把整个列表全部倒着排序再打印出来</li></ul></li></ul><h4 id="字符串判断"><a href="#字符串判断" class="headerlink" title="字符串判断*"></a>字符串判断*</h4><ul><li>endswith(suffix[,start[,end]]) -&gt;bool</li><li>在指定的区间[start,end),字符串是否是suffix结尾</li><li>startswith(prefix[,start[,end]])-&gt;bool</li><li>在指定的区间[start,end).字符串是否prefix开头</li></ul><h5 id="字符串判断is系列"><a href="#字符串判断is系列" class="headerlink" title="字符串判断is系列"></a>字符串判断is系列</h5><p>isalnum()-&gt;bool是否是字母和数字组成</p><p>isalpha()是否是字母</p><p>isdecimal()是否只包含十进制数字</p><p>isdigit()是否全部数字(0~9)</p><p>isidentifier()是不是字母和下划线开头，其他都是字母，数字，下划线</p><p>islower()是否都是大小写</p><p>isupper()是否全部大写</p><p>isspace()是否只包含空白字符</p><h4 id="字符串格式化"><a href="#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h4><p>字符串的格式化是一种拼接字符串输出样式的手段，更灵活方便</p><ul><li>join拼接只能使用分隔符，且要求被拼接的是可迭代对象</li><li>+拼接字符串还算方便，但是非字符串需要先转换成字符串才能拼接</li></ul><p>在2.5版本之前，只能使用printf style风格的print输出</p><ul><li>print-style formatting，来自于C语言printf函数</li><li>格式要求</li><li>占位符：使用%和格式字符串组成，例如%s，%d等</li><li>s调用str()，r会调用repr().所有对象都可以被这两个转换。</li><li>占位符中还可以插入修饰字符，例如%03d表示打印3个位置，不够前面补零</li><li>format % values，格式字符串和被格式的值之间使用%分隔</li><li>values只能是一个对象，或是一个和格式字符串占位符数目相等的元组，或一个字典<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> printf-style formatting 举例</span><br><span class="line">&quot;I am %03d&quot; % (20,)</span><br><span class="line">&apos;I like %s.&apos; % &apos;Python&apos;</span><br><span class="line">&apos;%3.2f%% , 0x%x, 0X%02X&apos; % (89.7654, 10, 15)</span><br><span class="line">&quot;I am %-5d&quot; % (20,)</span><br></pre></td></tr></table></figure></li></ul><p>举例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> &apos;i am %d&apos; % 20</span><br><span class="line"></span><br><span class="line">&apos;i am 20&apos; </span><br><span class="line"></span><br><span class="line">&apos;i am %d&apos; % (20,)#(20,)他是一个元组后面加上逗号</span><br><span class="line"></span><br><span class="line">&apos;i am 20&apos;</span><br><span class="line"></span><br><span class="line">&apos;i am %d %d&apos; % (20,20)#前面是两个占位符后面写两个。有两个空，括号不能去掉，只有一个空可以。如果前面是一个空后面不能写两个数，否则会报错。</span><br><span class="line"></span><br><span class="line">&apos;i am 20&apos;</span><br><span class="line"></span><br><span class="line">&apos;%.3f % 1.232546&apos;#小数点以后是控制精度的，四舍五入。</span><br><span class="line"></span><br><span class="line">&apos;1,233&apos;</span><br></pre></td></tr></table></figure></p><h5 id="format函数"><a href="#format函数" class="headerlink" title="format函数"></a>format函数</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> format函数格式字符串语法——Python鼓励使用</span><br><span class="line"> &quot;&#123;&#125; &#123;xxx&#125;&quot;.format(*args, **kwargs) -&gt; str##返回一个新字符串</span><br><span class="line"> args是位置参数，是一个元组</span><br><span class="line"> kwargs是关键字参数，是一个字典</span><br><span class="line"> 花括号表示占位符</span><br><span class="line"> &#123;&#125;表示按照顺序匹配位置参数，&#123;n&#125;表示取位置参数索引为n的值</span><br><span class="line"> &#123;xxx&#125;表示在关键字参数中搜索名称一致的</span><br><span class="line"> &#123;&#123;&#125;&#125; 表示打印花括号</span><br></pre></td></tr></table></figure><ul><li> 位置参数</li></ul><p><code>&quot;{}:{}&quot;.format(&#39;192.168.1.100&#39;,8888)</code>，这就是按照位置顺序用位置参数替换前面的格式字符串的占位符中<br> 关键字参数或命名参数<br><code>&quot;{server} {1}:{0}&quot;.format(8888, &#39;192.168.1.100&#39;, server=&#39;Web Server Info : &#39;) ，</code>位置参数按照序号匹配，<br>关键字参数按照名词匹配<br> 访问元素<br><code>&quot;{0[0]}.{0[1]}&quot;.format((&#39;magedu&#39;,&#39;com&#39;))</code><br> 对象属性访问<br><figure class="highlight plain"><figcaption><span>collections import namedtuple</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Point = namedtuple(&apos;Point&apos;,&apos;x y&apos;)</span><br><span class="line">p = Point(4,5)</span><br><span class="line">&quot;&#123;&#123;&#123;0.x&#125;,&#123;0.y&#125;&#125;&#125;&quot;.format(p)</span><br></pre></td></tr></table></figure></p><p> 对齐<br>‘{0}<em>{1}={2:&lt;2}’.format(3,2,2</em>3)<br>‘{0}<em>{1}={2:&lt;02}’.format(3,2,2</em>3)<br>‘{0}<em>{1}={2:&gt;02}’.format(3,2,2</em>3)<br>‘{:^30}’.format(‘centered’)<br>‘{:<em>^30}’.format(‘centered’)<br> 进制<br>“int: {0:d};  hex: {0:x};  oct: {0:o};  bin: {0:b}”.format(42)<br>“int: {0:d};  hex: {0:#x};  oct: {0:#o};  bin: {0:#b}”.format(42)<br>octets = [192, 168, 0, 1]<br>‘{:02X}{:02X}{:02X}{:02X}’.format(</em>octets)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> 浮点数</span><br></pre></td></tr></table></figure></p><p>print(“{}”.format(3<strong>0.5)) # 1.7320508075688772<br>print(“{:g}”.format(3</strong>0.5)) # 1.73205<br>print(“{:f}”.format(3<strong>0.5)) # 1.732051<br>print(“{:10f}”.format(3</strong>0.5)) # 右对齐<br>print(“{:2}”.format(102.231)) # 宽度为2<br>print(“{:.2}”.format(3<strong>0.5)) # 1.72个数字<br>print(“{:.2f}”.format(3</strong>0.5)) # 1.73小数点后2位<br>print(“{:3.2f}”.format(3**0.5)) # 1.73宽度为3，小数点后2位<br>print(“{:3.3f}”.format(0.2745))# 0.275<br>print(“{:3.3%}”.format(1/3)) # 33.333%<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">建议使用format函数格式化字符串</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;字符串&quot;&gt;&lt;a href=&quot;#字符串&quot; class=&quot;headerlink&quot; title=&quot;字符串&quot;&gt;&lt;/a&gt;字符串&lt;/h3&gt;&lt;p&gt;字符串是一个序列，而且是不可变的，因为它是字面常量。&lt;/p&gt;
&lt;p&gt;一个字符串一旦定义好就不能改变，因为它是一个字面常量。加出来的它
      
    
    </summary>
    
      <category term="python" scheme="https://hdxgithub.github.io/categories/python/"/>
    
    
      <category term="字符串" scheme="https://hdxgithub.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>习题</title>
    <link href="https://hdxgithub.github.io/2018/08/11/%E4%B9%A0%E9%A2%98/"/>
    <id>https://hdxgithub.github.io/2018/08/11/习题/</id>
    <published>2018-08-11T08:06:16.465Z</published>
    <updated>2018-08-11T08:12:03.901Z</updated>
    
    <content type="html"><![CDATA[<h4 id="比较2个数的大小"><a href="#比较2个数的大小" class="headerlink" title="比较2个数的大小"></a>比较2个数的大小</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#比较2个数的大小</span><br><span class="line">num1=int(input(&apos;&gt;&gt;&apos;))</span><br><span class="line">num2=int(input(&apos;&gt;&gt;&apos;))</span><br><span class="line">if num1&gt;num2:</span><br><span class="line">    print(num1)</span><br><span class="line">else:</span><br><span class="line">    print(num2)</span><br></pre></td></tr></table></figure><pre><code>  File &quot;&lt;ipython-input-114-eed8116f8ed3&gt;&quot;, line 3    if num1&gt;num2 print(num1) else print(num2)                     ^SyntaxError: invalid syntax</code></pre><p>num1=int(input(‘&gt;&gt;’))<br>num2=int(input(‘&gt;&gt;’))<br>if num1&gt;num2<br>    print(num1)<br>else<br>   print(num2)</p><p> num1=int(input(‘&gt;&gt;’))<br>num2=int(input(‘&gt;&gt;’))<br>if num1&gt;num2:<br>    print(num1)<br>else:<br>    print(num2)</p><p>####打印九九乘法表</p><p>#####no=1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#打印九九乘法表</span><br><span class="line">#no=1</span><br><span class="line">for i in range(1,10):#九九乘法表里的数是两个1到9的数在相乘range（1，10）【1，10）前包后不包</span><br><span class="line">    for c in range(1,i+1):#为了避免重复，当i取值1时c取值是1.竖向打印当i取值2时c取值1，2</span><br><span class="line">        print(i,&apos;*&apos;,c,&apos;=&apos;,i*c,end=&apos; &apos;)#打印格式i*C=i*c（乘积）中间以空格分开</span><br><span class="line">    print()#换行符</span><br></pre></td></tr></table></figure><pre><code>1 * 1 = 1 2 * 1 = 2 2 * 2 = 4 3 * 1 = 3 3 * 2 = 6 3 * 3 = 9 4 * 1 = 4 4 * 2 = 8 4 * 3 = 12 4 * 4 = 16 5 * 1 = 5 5 * 2 = 10 5 * 3 = 15 5 * 4 = 20 5 * 5 = 25 6 * 1 = 6 6 * 2 = 12 6 * 3 = 18 6 * 4 = 24 6 * 5 = 30 6 * 6 = 36 7 * 1 = 7 7 * 2 = 14 7 * 3 = 21 7 * 4 = 28 7 * 5 = 35 7 * 6 = 42 7 * 7 = 49 8 * 1 = 8 8 * 2 = 16 8 * 3 = 24 8 * 4 = 32 8 * 5 = 40 8 * 6 = 48 8 * 7 = 56 8 * 8 = 64 9 * 1 = 9 9 * 2 = 18 9 * 3 = 27 9 * 4 = 36 9 * 5 = 45 9 * 6 = 54 9 * 7 = 63 9 * 8 = 72 9 * 9 = 81 </code></pre><p>#####no=2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#no=2</span><br><span class="line">for i in range(1,10): #2</span><br><span class="line">    line = &apos;&apos;#定义line是一个字符串</span><br><span class="line">    for j in range(1,i+1):</span><br><span class="line">        product = i*j</span><br><span class="line">        if j&gt;1 and product &lt; 10:#当j大于1，和乘积小于10时</span><br><span class="line">            product = str(product) + &apos;  &apos;#乘积后面加两个空格</span><br><span class="line">        else:</span><br><span class="line">            product = str(product) + &apos; &apos;#乘积大于等于10的时候后面加一个空格</span><br><span class="line">        line += str(j) + &apos;*&apos; + str(i) + &apos;=&apos; + product#格式1*1=1,字符串相加</span><br><span class="line">    print(line)</span><br></pre></td></tr></table></figure><pre><code>1*1=1 1*2=2 2*2=4  1*3=3 2*3=6  3*3=9  1*4=4 2*4=8  3*4=12 4*4=16 1*5=5 2*5=10 3*5=15 4*5=20 5*5=25 1*6=6 2*6=12 3*6=18 4*6=24 5*6=30 6*6=36 1*7=7 2*7=14 3*7=21 4*7=28 5*7=35 6*7=42 7*7=49 1*8=8 2*8=16 3*8=24 4*8=32 5*8=40 6*8=48 7*8=56 8*8=64 1*9=9 2*9=18 3*9=27 4*9=36 5*9=45 6*9=54 7*9=63 8*9=72 9*9=81 </code></pre><p>#####no=3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#no=3</span><br><span class="line">#&apos;&#123;&#125;&#123;&#125;&#123;&#125;&apos;.format(j,i,i*j)&#123;&#125;代表占位符；j,i,i*j,分别代表对应的位置。</span><br><span class="line">#&#123;0&#125;&#123;1&#125;&#123;2&#125;，&#123;2&#125;&#123;1&#125;&#123;0&#125;分别代表顺序；&#123;&#125;&#123;&#125;&#123;:&lt;2&#125;代表乘积左对齐</span><br><span class="line">for i in range(1,10):</span><br><span class="line">for j in range(1,i+1):</span><br><span class="line">print(&apos;&#123;&#125;*&#123;&#125;=&#123;:&lt;&#123;&#125;&#125;&apos;.format(j,i,i*j,2 if j&lt;2 else 3),end=&apos;&apos;)#如果j小于2，乘积后面打两个空格。否则打印三个空格</span><br><span class="line">print()</span><br></pre></td></tr></table></figure><pre><code>1*1=1 1*2=2 2*2=4  1*3=3 2*3=6  3*3=9  1*4=4 2*4=8  3*4=12 4*4=16 1*5=5 2*5=10 3*5=15 4*5=20 5*5=25 1*6=6 2*6=12 3*6=18 4*6=24 5*6=30 6*6=36 1*7=7 2*7=14 3*7=21 4*7=28 5*7=35 6*7=42 7*7=49 1*8=8 2*8=16 3*8=24 4*8=32 5*8=40 6*8=48 7*8=56 8*8=64 1*9=9 2*9=18 3*9=27 4*9=36 5*9=45 6*9=54 7*9=63 8*9=72 9*9=81 </code></pre><p>#####no=4</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#no=4</span><br><span class="line">for i in range(1,10):</span><br><span class="line">    print(&quot; &quot;*9*(i-1),end=&quot; &quot;)</span><br><span class="line">    for j in range(i,10):</span><br><span class="line">        print(&quot;&#123;&#125;*&#123;&#125;=&#123;:&lt;4d&#125;&quot;.format(i,j,i*j),end=&quot; &quot;)</span><br><span class="line">        #print(i,&apos;*&apos;,j,&apos;=&apos;,i*j,end = &apos; &apos;)</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure><pre><code>1*1=1    1*2=2    1*3=3    1*4=4    1*5=5    1*6=6    1*7=7    1*8=8    1*9=9             2*2=4    2*3=6    2*4=8    2*5=10   2*6=12   2*7=14   2*8=16   2*9=18                     3*3=9    3*4=12   3*5=15   3*6=18   3*7=21   3*8=24   3*9=27                              4*4=16   4*5=20   4*6=24   4*7=28   4*8=32   4*9=36                                       5*5=25   5*6=30   5*7=35   5*8=40   5*9=45                                                6*6=36   6*7=42   6*8=48   6*9=54                                                         7*7=49   7*8=56   7*9=63                                                                  8*8=64   8*9=72                                                                           9*9=81   </code></pre><p>#####no=5</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#no=5</span><br><span class="line">unit = &apos; &apos;*7</span><br><span class="line">for i in range(1,10):</span><br><span class="line">    print(unit * (i-1), end=&apos;&apos;)</span><br><span class="line">    for j in range(i,10):</span><br><span class="line">        print(&apos;&#123;&#125;*&#123;&#125;=&#123;:&lt;&#123;&#125;&#125;&apos;.format(i,j,i*j,3 if j&lt;2 else 3), end=&apos;&apos;)</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure><pre><code>1*1=1  1*2=2  1*3=3  1*4=4  1*5=5  1*6=6  1*7=7  1*8=8  1*9=9         2*2=4  2*3=6  2*4=8  2*5=10 2*6=12 2*7=14 2*8=16 2*9=18               3*3=9  3*4=12 3*5=15 3*6=18 3*7=21 3*8=24 3*9=27                      4*4=16 4*5=20 4*6=24 4*7=28 4*8=32 4*9=36                             5*5=25 5*6=30 5*7=35 5*8=40 5*9=45                                    6*6=36 6*7=42 6*8=48 6*9=54                                           7*7=49 7*8=56 7*9=63                                                  8*8=64 8*9=72                                                         9*9=81 </code></pre><p>####打印图形</p><p>#####打印正方形</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#打印图形</span><br><span class="line">#打印正方形</span><br><span class="line">#no=1</span><br><span class="line">n=5</span><br><span class="line">e=-n//2#-5//2等于-2</span><br><span class="line">for i in range(e,n+e):#（-2，3）</span><br><span class="line">    if i == e or i == n+e-1:</span><br><span class="line">        print(&apos;*&apos;*n,sep=&apos; &apos;)</span><br><span class="line">    else:</span><br><span class="line">        print(&apos;*&apos; + &apos; &apos;*(n-2) + &apos;*&apos;)</span><br></pre></td></tr></table></figure><pre><code>******   **   **   ******</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#no=2</span><br><span class="line"># n=7</span><br><span class="line"># e=-n//1</span><br><span class="line"># for i in range(e,n+e):</span><br><span class="line">#     if i==e or i ==n+e:</span><br><span class="line">#         print(&apos;*&apos;)</span><br><span class="line">#     else:</span><br><span class="line">#         print(&apos;*&apos;*(e+1,n-1))</span><br></pre></td></tr></table></figure><pre><code>*---------------------------------------------------------------------------TypeError                                 Traceback (most recent call last)&lt;ipython-input-42-024b3a40fb94&gt; in &lt;module&gt;()      5         print(&apos;*&apos;)      6     else:----&gt; 7         print(&apos;*&apos;*(e+1,n-1))TypeError: can&apos;t multiply sequence by non-int of type &apos;tuple&apos;</code></pre><p>####打印菱形</p><p>#####no=1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#打印菱形</span><br><span class="line">#no=1</span><br><span class="line">#分两半部分打印</span><br><span class="line">n=5</span><br><span class="line">a=&apos;*&apos;</span><br><span class="line">for i in range(1,n+1,2):</span><br><span class="line">    t = (n-i)//2#打印空格数</span><br><span class="line">    print(&apos; &apos;*t + a*i + &apos; &apos;*t)#格式先打印上半部分1，3，5</span><br><span class="line">for i in reversed(range(1,n-1,2)):#reversed反向；3，1</span><br><span class="line">    t = (n-i)//2#打印下半部份空格数</span><br><span class="line">    print(&apos; &apos;*t + a*i + &apos; &apos;*t)#打印下半部份格式</span><br></pre></td></tr></table></figure><pre><code>  *   *** ***** ***   *  </code></pre><p>#####no=1-1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#no=1-1</span><br><span class="line">#分两半部分打印</span><br><span class="line">raw = int(input(&quot;please input line number: &quot;))</span><br><span class="line">s = &apos;*&apos;</span><br><span class="line">for i in range(1,raw+1,2):</span><br><span class="line">    t = (raw-i)//2</span><br><span class="line">    print(&apos; &apos;*t + s*i + &apos; &apos;*t)</span><br><span class="line">for i in reversed(range(1,raw-1,2)):</span><br><span class="line">    t = (raw-i)//2</span><br><span class="line">    print(&apos; &apos;*t + s*i + &apos; &apos;*t)</span><br></pre></td></tr></table></figure><pre><code>please input line number: 5  *   *** ***** ***   *  </code></pre><p>#####no=2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#no=2</span><br><span class="line">#分两部分打印</span><br><span class="line">n=int(input(&apos;please input line number:&apos;))#输入行数</span><br><span class="line">a=&apos;*&apos;</span><br><span class="line">for i in range(1,n+1,2):#上半部分循环的‘*’数</span><br><span class="line">    t = (n-i)//2#打印菱形上半部分空格数</span><br><span class="line">    print(&apos; &apos;*t + a*i + &apos; &apos;*t)#打印上半部分格式</span><br><span class="line">for i in range(1,n-1,2):#下半部分循环的‘*’数</span><br><span class="line">    t  = (i+1)//2#打印下半部分空格数</span><br><span class="line">    print(&apos; &apos;*t + a*(n-(i+1)) + &apos; &apos;*t)#打印下半部分格式</span><br></pre></td></tr></table></figure><pre><code>please input line number:7   *     ***   ***** ******* *****   ***     *   </code></pre><p>#####错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#错误</span><br><span class="line"># n=int(input(&apos;please input line number:&apos;))</span><br><span class="line"># a=&apos;*&apos;</span><br><span class="line"># for i in range(1,n+1,2):</span><br><span class="line">#     t = (n-i)//2</span><br><span class="line">#     print(&apos; &apos;*t + a*i + &apos; &apos;*t)</span><br><span class="line"># for i in range(1,n-1,2):</span><br><span class="line">#     t  = (i+1)//2</span><br><span class="line">#     print(&apos; &apos;*t + a*(n-(i+1)) + &apos; &apos;*t)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#打印下半部份（错误）</span><br><span class="line">n=7</span><br><span class="line">s=&apos;*&apos;</span><br><span class="line">for i in range(0,7,2):</span><br><span class="line">    print(&apos; &apos;*i + s*(n-i) + &apos;&apos;*i )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#错误</span><br><span class="line"># n=7</span><br><span class="line"># e=n//2</span><br><span class="line"># for i in range(-3,4):</span><br><span class="line">#     print(&apos;&apos;*(n-(e*2)) + &apos;*&apos;*(n-(x*2)))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#打印斐波那契数列</span><br><span class="line">#错误</span><br><span class="line"># a=1</span><br><span class="line"># print(a,end=&apos; &apos;)</span><br><span class="line"># for n in range(1,100):</span><br><span class="line">#     n=(n-1)+(n-2)</span><br><span class="line">#     print(n,end=&apos; &apos;)</span><br></pre></td></tr></table></figure><pre><code>1 -1 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99 101 103 105 107 109 111 113 115 117 119 121 123 125 127 129 131 133 135 137 139 141 143 145 147 149 151 153 155 157 159 161 163 165 167 169 171 173 175 177 179 181 183 185 187 189 191 193 195 </code></pre><p>####打印斐波那契数列（错误：多打印一个数）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#打印斐波那契数列（错误：多打印一个数）</span><br><span class="line">a=1</span><br><span class="line">b=1</span><br><span class="line">c=2</span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line">print(c)</span><br><span class="line">while c&lt;100:</span><br><span class="line">    a=b</span><br><span class="line">    b=c</span><br><span class="line">    c=a+b</span><br><span class="line">    print(c)</span><br></pre></td></tr></table></figure></p><pre><code>11223581321345589144</code></pre><p>#####no=1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#no=1</span><br><span class="line">a=1</span><br><span class="line">b=1</span><br><span class="line">print(a)</span><br><span class="line">while b&lt;100:#b进不来超过范围</span><br><span class="line">    print(b)#所以打印89</span><br><span class="line">    c=a+b#当b=89时a=55，a+b=c=144</span><br><span class="line">    a=b#a=89</span><br><span class="line">    b=c#b=144</span><br></pre></td></tr></table></figure><pre><code>1123581321345589</code></pre><p>#####(错误:少打一个1）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#(错误:少打一个1）</span><br><span class="line">n=int(input(&apos;展示到第几项？&apos;))</span><br><span class="line">a=1</span><br><span class="line">b=1#a,b两个特殊的数</span><br><span class="line">i=1#从1开始计数</span><br><span class="line">while i&lt;=n:#打印展示到第10项</span><br><span class="line">    print(b)#当第八次时a=55时b=89时，a+b=c=144.a变成89，b变成144这是第十一次while进不去</span><br><span class="line">    c=a+b</span><br><span class="line">    a=b</span><br><span class="line">    b=c</span><br><span class="line">    i += 1</span><br></pre></td></tr></table></figure><pre><code>展示到第几项？10123581321345589</code></pre><p>#####比较两个数的大小</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#比较两个数的大小</span><br><span class="line">n=7</span><br><span class="line">i=5</span><br><span class="line">if i&gt;n:</span><br><span class="line">    print(n,i)</span><br><span class="line">else:</span><br><span class="line">    print(i,n)</span><br></pre></td></tr></table></figure><p>#####输入两个数，比较大小，升序打印<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#输入两个数，比较大小，升序打印</span><br><span class="line">a = int(input(&apos;please input number a:&apos;))</span><br><span class="line">b = int(input(&apos;please input number b:&apos;))</span><br><span class="line">if a&gt;b:</span><br><span class="line">    print(b,a)</span><br><span class="line">else:</span><br><span class="line">    print(a,b)</span><br></pre></td></tr></table></figure></p><p>#####比较两个数的大小，三元表达式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#比较两个数的大小，三元表达式</span><br><span class="line">n = int(input(&apos;please  input number n:&apos;))</span><br><span class="line">m = int(input(&apos;please input number m:&apos;))</span><br><span class="line">print(m,n) if n&gt;m else print(n,m)</span><br></pre></td></tr></table></figure></p><p>#####求圆的面积和周长<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#求圆的面积和周长</span><br><span class="line">pi = 3.14</span><br><span class="line">r = float(input(&apos;please input r:&apos;))</span><br><span class="line">m = 2*pi*r #圆的周长</span><br><span class="line">n = pi*(r**2)#圆的面积</span><br><span class="line">print(m,n)</span><br></pre></td></tr></table></figure></p><pre><code>please input r:1062.800000000000004 314.0</code></pre><p>#####打印圆的周长和圆的面积no=2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#打印圆的周长和圆的面积no=2</span><br><span class="line">r = int(input(&apos;please input r:&apos;)) </span><br><span class="line">pi = 3.14</span><br><span class="line">print(&apos;area=&apos;+str(pi*r*r))</span><br><span class="line">print(&apos;cr=&apos;+str(2*pi*r))</span><br></pre></td></tr></table></figure><p>#####三个数比较（错误）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#三个数比较（错误）</span><br><span class="line">b = input(&apos;&gt;&gt;&apos;)</span><br><span class="line">if b != &apos;&apos;:</span><br><span class="line">    max = int(b)</span><br><span class="line">    while True:</span><br><span class="line">        a = input(&apos;&gt;&gt;&apos;)</span><br><span class="line">        if a == &apos;&apos;:</span><br><span class="line">            break</span><br><span class="line">        a = int(a)</span><br><span class="line">        if a &gt; max:</span><br><span class="line">            max = a</span><br><span class="line">            print(max)</span><br><span class="line">        print(max)</span><br></pre></td></tr></table></figure><pre><code>&gt;&gt;2&gt;&gt;141414</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#错误三个数比较</span><br><span class="line"># b = input(&apos;&gt;&gt;&apos;)</span><br><span class="line"># if b != &apos;&apos;:</span><br><span class="line">#     max = int(b)</span><br><span class="line">#     while True:</span><br><span class="line">#         a = input(&apos;&gt;&gt;&apos;)</span><br><span class="line">#         a = int(a)</span><br><span class="line">#         if a &gt; max:</span><br><span class="line">#             max = a</span><br><span class="line">#         elif:</span><br><span class="line">#             print(max)</span><br><span class="line">#         else:</span><br><span class="line">#             break</span><br></pre></td></tr></table></figure><p>####算平均数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#算平均数</span><br><span class="line">count = 0   #算平均数的需要知道个数,count = 0用于计数.</span><br><span class="line">sum = 0   #算平均数得知道总和</span><br><span class="line">while True:</span><br><span class="line">num = int(input(&apos;please input number:&apos;))</span><br><span class="line">count +=1</span><br><span class="line">sum += num</span><br><span class="line">print(&apos;avg =&apos;,sum  / count)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nums = input().split()  #将一行字符串中以1个或多个空格分隔的元素取出放入列表。</span><br><span class="line">print(nums[0]+nums[1]) #int将字符转化为整数</span><br></pre></td></tr></table></figure><pre><code>19 *19*</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nums = input().split() </span><br><span class="line">print(str(nums))</span><br></pre></td></tr></table></figure><pre><code>12 *[&apos;12&apos;, &apos;*&apos;]</code></pre><p>#####输入19 *，取值19开平方</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#输入19 *，取值19开平方</span><br><span class="line">a = input().split()</span><br><span class="line">import math</span><br><span class="line">b = math.floor(math.sqrt((int(a[0])+1)/2))</span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure><pre><code>19 *3</code></pre><p>#####输入19 *，打印菱形错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#输入19 *，打印菱形错误</span><br><span class="line"># t = input().split()</span><br><span class="line"># import math</span><br><span class="line"># f = math.floor(math.sqrt(t[0]+1)/2)</span><br><span class="line"># c = t[1]</span><br><span class="line"># for i in range（1,t[0],2)</span><br><span class="line"># print(c*(2i+f),&apos;&apos;*(i-1))</span><br></pre></td></tr></table></figure><pre><code>  File &quot;&lt;ipython-input-6-4c1c0cdcb840&gt;&quot;, line 5    for i in range（1,t[0],2)                   ^SyntaxError: invalid character in identifier</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t = input().split()</span><br><span class="line">print(t[0],t[1])</span><br></pre></td></tr></table></figure><pre><code>12 *12 *</code></pre><p>#####输入三个数作比较，错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#输入三个数作比较，错误</span><br><span class="line"># a = int(input(&apos;&gt;&gt;&apos;))</span><br><span class="line"># b = int(input(&apos;&gt;&gt;&apos;))</span><br><span class="line"># c = int(input(&apos;&gt;&gt;&apos;))</span><br><span class="line"># max = a</span><br><span class="line"># if b&gt;c:</span><br><span class="line"># print(a,b,c)</span><br><span class="line"># else:</span><br><span class="line"># print(a,c,b)</span><br><span class="line"># max = b</span><br><span class="line"># if a&gt;c:</span><br><span class="line"># print(b,a,c)</span><br><span class="line"># else:</span><br><span class="line"># print(b,c,a)</span><br><span class="line"># max = c</span><br><span class="line"># if a&gt;b: </span><br><span class="line"># print(c,a,b)</span><br><span class="line"># else:</span><br><span class="line"># print(c,b,a)</span><br></pre></td></tr></table></figure><pre><code>  File &quot;&lt;ipython-input-31-0e58d1e2ced7&gt;&quot;, line 6    print(a,b,c)        ^IndentationError: expected an indented block</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#三个数比较，错误</span><br><span class="line">a = int(input(&apos;&gt;&gt;&apos;))</span><br><span class="line">b = int(input(&apos;&gt;&gt;&apos;))</span><br><span class="line">c = int(input(&apos;&gt;&gt;&apos;))</span><br><span class="line">l = list(a,b,c)</span><br><span class="line">import math</span><br><span class="line">max(list())</span><br><span class="line">print(max)</span><br></pre></td></tr></table></figure><pre><code>&gt;&gt;2&gt;&gt;15&gt;&gt;6---------------------------------------------------------------------------TypeError                                 Traceback (most recent call last)&lt;ipython-input-8-ce306ebee162&gt; in &lt;module&gt;()      2 b = int(input(&apos;&gt;&gt;&apos;))      3 c = int(input(&apos;&gt;&gt;&apos;))----&gt; 4 l = list(a,b,c)      5 import math      6 max(list())TypeError: list() takes at most 1 argument (3 given)</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#三个数比较，错误</span><br><span class="line">a = int(input(&apos;&gt;&gt;&apos;))</span><br><span class="line">b = int(input(&apos;&gt;&gt;&apos;))</span><br><span class="line">c = int(input(&apos;&gt;&gt;&apos;))</span><br><span class="line">if a&gt;b and b&gt;c:</span><br><span class="line">    print(a,b,c)</span><br><span class="line">else:</span><br><span class="line">    </span><br><span class="line">    print(c,b,a)</span><br></pre></td></tr></table></figure><pre><code>&gt;&gt;2&gt;&gt;2&gt;&gt;00 2 2</code></pre><p>#####三个数比较，no=1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#三个数比较，no=1</span><br><span class="line">b = int(input(&apos;&gt;&gt;&apos;))</span><br><span class="line">m = int(input(&apos;&gt;&gt;&apos;))</span><br><span class="line">n = int(input(&apos;&gt;&gt;&apos;))</span><br><span class="line">if b&gt;m:</span><br><span class="line">    if b&gt;n:</span><br><span class="line">        if m&gt;n:</span><br><span class="line">            print(b,m,n)</span><br><span class="line">        else:</span><br><span class="line">            print(b,n,m)</span><br><span class="line">    else:</span><br><span class="line">        print(n,b,m)</span><br><span class="line">else:</span><br><span class="line">    print(n,m,b)</span><br></pre></td></tr></table></figure><pre><code>&gt;&gt;100000&gt;&gt;99999&gt;&gt;5555100000 99999 5555</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#三个数比较，错误</span><br><span class="line">b = str(input(&apos;&gt;&gt;&apos;))</span><br><span class="line">m = str(input(&apos;&gt;&gt;&apos;))</span><br><span class="line">n = str(input(&apos;&gt;&gt;&apos;))</span><br><span class="line">max(b,m,n)</span><br><span class="line">print(max)</span><br></pre></td></tr></table></figure><pre><code>&gt;&gt;0&gt;&gt;0&gt;&gt;2&lt;built-in function max&gt;</code></pre><p>#####杨辉三角形，前四行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#杨辉三角形，前四行</span><br><span class="line">for i in range(4):</span><br><span class="line">        m = 11**i</span><br><span class="line">        print(m,end=&apos;\n&apos;)#\n代表换行</span><br></pre></td></tr></table></figure><pre><code>1111211331</code></pre><p>#####杨辉三角</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#杨辉三角</span><br><span class="line">n = int(input(&apos;&gt;&gt;&apos;))</span><br><span class="line">a = [[1],[1,1]]</span><br><span class="line">for i in range(2,n):</span><br><span class="line">    b=a[i-1]</span><br><span class="line">    c=[1]</span><br><span class="line">    for j in range(i-1):</span><br><span class="line">        c.append(b[j]+b[j+1])</span><br><span class="line">    c.append(1)</span><br><span class="line">    a.append(c) </span><br><span class="line">for x in a:</span><br><span class="line">    print(x)</span><br></pre></td></tr></table></figure><pre><code>&gt;&gt;6[1][1, 1][1, 2, 1][1, 3, 3, 1][1, 4, 6, 4, 1][1, 5, 10, 10, 5, 1]</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#杨辉三角形（错误）</span><br><span class="line">for i in range(4):</span><br><span class="line">        m = 11**i</span><br><span class="line">        print(m,end=&apos;\n&apos;)#\n代表换行</span><br></pre></td></tr></table></figure><pre><code>[1, 1]</code></pre><p> #####通过用户输入数字计算阶乘</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"> </span><br><span class="line"># Filename : test.py</span><br><span class="line"># author by : www.runoob.com</span><br><span class="line"> </span><br><span class="line"># 通过用户输入数字计算阶乘</span><br><span class="line"> </span><br><span class="line"># 获取用户输入的数字</span><br><span class="line">num = int(input(&quot;请输入一个数字: &quot;))</span><br><span class="line">factorial = 1</span><br><span class="line"> </span><br><span class="line"># 查看数字是负数，0 或 正数</span><br><span class="line">if num &lt; 0:</span><br><span class="line">   print(&quot;抱歉，负数没有阶乘&quot;)</span><br><span class="line">elif num == 0:</span><br><span class="line">   print(&quot;0 的阶乘为 1&quot;)</span><br><span class="line">else:</span><br><span class="line">   for i in range(1,num + 1):</span><br><span class="line">       factorial = factorial*i</span><br><span class="line">   print(&quot;%d 的阶乘为 %d&quot; %(num,factorial))</span><br></pre></td></tr></table></figure><pre><code>请输入一个数字: 33 的阶乘为 6</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = [1]#列表追加</span><br><span class="line">a.append(1)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><pre><code>[1, 1]</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for i in [2,3,5,7]:#for循环列表</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><pre><code>2357</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#杨辉三角</span><br><span class="line">n = 6</span><br><span class="line">a = [[1],[1,1]]</span><br><span class="line">for i in range(2,6)；</span><br><span class="line">    b = a[1]</span><br><span class="line">    c = [1]</span><br><span class="line">    for j in range()</span><br></pre></td></tr></table></figure><pre><code>  File &quot;&lt;ipython-input-6-c3da606c3ca7&gt;&quot;, line 6    b = [:n]         ^SyntaxError: invalid syntax</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#杨辉三角</span><br><span class="line">n = int(input(&apos;&gt;&gt;&apos;))</span><br><span class="line">a = [[1],[1,1]]</span><br><span class="line">for i in range(2,n):</span><br><span class="line">    b=a[i-1]</span><br><span class="line">    c=[1]</span><br><span class="line">    for j in range(i-1):</span><br><span class="line">        c.append(b[j]+b[j+1])</span><br><span class="line">    c.append(1)</span><br><span class="line">    a.append(c) </span><br><span class="line">for x in a:</span><br><span class="line">    print(x)</span><br></pre></td></tr></table></figure><pre><code>&gt;&gt;6[1][1, 1][1, 2, 1][1, 3, 3, 1][1, 4, 6, 4, 1][1, 5, 10, 10, 5, 1]</code></pre><h4 id="列表练习"><a href="#列表练习" class="headerlink" title="列表练习"></a>列表练习</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 列表练习</span><br><span class="line"></span><br><span class="line"># 求100内的素数</span><br><span class="line"></span><br><span class="line"># 从2开始到自身的-1数中找到一个能整除的=》从2开始到自身开平方的数中找到一个能整除的</span><br><span class="line"></span><br><span class="line"># 一个合数一定可以分解成几个素数的乘积，也就是说，一个数如果能被一个素数整除就是合数</span><br><span class="line"></span><br><span class="line"># 质数又称素数。一个大于1的自然数，除了1和它自身外，不能整除其他自然数的数叫做质数；否则称为合数。</span><br><span class="line"></span><br><span class="line"># 使用列表时尾部追加最合适；使用列表时尽量使用索引。一百以内素数有25个；</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">n = 100                 #（100范围内的质数有25个）求100范围内的质数</span><br><span class="line">for i in range(2,n):    #用for 循环从2到给定的数100</span><br><span class="line">    for x in range(2,i):#x的取值范围是2到每次i的取值（按照定义是这么写的，除了1和它自身外 ）</span><br><span class="line">        if i % x == 0:   #如果i能整除x说明它是一个合数</span><br><span class="line">            break          #他就会停止</span><br><span class="line">    else:                 #否则，它就是一个质数</span><br><span class="line">        print(i)          #就打印出来</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">n = 100               #（100范围内的质数有25个）求100范围内的质数</span><br><span class="line">for i in range(2,n):  #用for 循环从2到给定的数100</span><br><span class="line">    for x in range(2,int(i**0.5)+1):#开平方比如当i取值100时开平方10以上的数和10以下的数会有重复有时会带小数点。所以加一。奇偶数，</span><br><span class="line">        if i % x == 0:</span><br><span class="line">            break</span><br><span class="line">    else: </span><br><span class="line">        print(i)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#for x in primenumbers: #当i取值2时x没有值进不去所以直接跳过追加到primenumbewrs这个列表里，以此类推3不能整除2所以追加到primenumbers里，现在</span><br><span class="line"># 当i取值4时4能整除2所以4是合数，以此类推下去primenumbers里都是质数，也就是验证一个合数一定可以分解成几个素数的乘积，也就是说，一个数如果</span><br><span class="line">#能被一个素数整除就是合数这句话。</span><br><span class="line">n = 100</span><br><span class="line">count = 0</span><br><span class="line">primenumbers = []               #给定一个空列表</span><br><span class="line">for i in range(2,n):                 #取值2到100</span><br><span class="line">    for x in primenumbers: #当i取值2时x没有值进不去所以直接跳过追加到primenumbewrs这个列表里，以此类推3不能整除2所以追加到primenumbers里</span><br><span class="line">        if i % x ==0:#找到了合数</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">        count += 1</span><br><span class="line">        primenumbers.append(i)</span><br><span class="line">print(count,primenumbers)</span><br></pre></td></tr></table></figure><pre><code>25 [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">n = 100</span><br><span class="line">count = 0</span><br><span class="line">primenumbers = []</span><br><span class="line">flag = False #不是合数</span><br><span class="line">for i in range(2,n):</span><br><span class="line">    edge = i**0.5</span><br><span class="line">    for x in primenumbers:</span><br><span class="line">        if i % x == 0:#如果找到能整除的，就说明找到了质数</span><br><span class="line">            flag = True</span><br><span class="line">            break</span><br><span class="line">        if x &gt; edge:#如果大于i的开平方还没找到，他就是一个质数.跳出for x in primenumbers循环进入if not flag</span><br><span class="line">            flag = False</span><br><span class="line">            break</span><br><span class="line">            </span><br><span class="line">    if not flag:</span><br><span class="line">        count += 1</span><br><span class="line">        primenumbers.append(i)</span><br><span class="line">print(count,primenumbers)</span><br></pre></td></tr></table></figure><pre><code>25 [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">import datetime#比较时间差异</span><br><span class="line">n = 10000              #（100范围内的质数有25个）求100范围内的质数</span><br><span class="line">count = 0</span><br><span class="line">start = datetime.datetime.now()</span><br><span class="line">for i in range(2,n):    #用for 循环从2到给定的数100</span><br><span class="line">    for x in range(2,i):#x的取值范围是2到每次i的取值（按照定义是这么写的，除了1和它自身外 ）</span><br><span class="line">        if i % x == 0:   #如果i能整除x说明它是一个合数</span><br><span class="line">            break          #他就会停止</span><br><span class="line">    else:                 #否则，它就是一个质数</span><br><span class="line">        count += 1</span><br><span class="line">#         print(i) </span><br><span class="line">delta = (datetime.datetime.now() - start).total_seconds()</span><br><span class="line">print(count)</span><br><span class="line">print(&apos;~&apos;*30)</span><br><span class="line">print(delta)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">count = 0</span><br><span class="line">primenumbers = []               #给定一个空列表</span><br><span class="line">start = datetime.datetime.now()</span><br><span class="line">for i in range(2,n):                 #取值2到100</span><br><span class="line">    for x in primenumbers: #当i取值2时x没有值进不去所以直接跳过追加到primenumbewrs这个列表里，以此类推3不能整除2所以追加到primenumbers里</span><br><span class="line">        if i % x ==0:#找到了合数</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">        count += 1</span><br><span class="line">        primenumbers.append(i)</span><br><span class="line"># print(count,primenumbers)</span><br><span class="line">print(count)</span><br><span class="line">delta = (datetime.datetime.now() - start).total_seconds()</span><br><span class="line">print(&apos;~&apos;*30)</span><br><span class="line">print(delta)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">count = 0</span><br><span class="line">primenumbers = []</span><br><span class="line">start = datetime.datetime.now()</span><br><span class="line">flag = False #不是合数</span><br><span class="line">for i in range(2,n):</span><br><span class="line">    edge = i**0.5</span><br><span class="line">    for x in primenumbers:</span><br><span class="line">        if i % x == 0:#如果找到能整除的，就说明找到了质数</span><br><span class="line">            flag = True</span><br><span class="line">            break</span><br><span class="line">        if x &gt; edge:#如果大于i的开平方还没找到，他就是一个质数.跳出for x in primenumbers循环进入if not flag</span><br><span class="line">            flag = False</span><br><span class="line">            break</span><br><span class="line">            </span><br><span class="line">    if not flag:</span><br><span class="line">        count += 1</span><br><span class="line">        primenumbers.append(i)</span><br><span class="line"># print(count,primenumbers)</span><br><span class="line">print(count)</span><br><span class="line">delta = (datetime.datetime.now() - start).total_seconds()</span><br><span class="line">print(&apos;~&apos;*30)</span><br><span class="line">print(delta)</span><br></pre></td></tr></table></figure><pre><code>1229<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0.539595</span><br><span class="line">1229</span><br></pre></td></tr></table></figure>0.064741229<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">    0.009993</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#####大于3的素数只有6N-1和6N+1两种形式</span><br><span class="line">```</span><br><span class="line">#大于3的素数只有6N-1和6N+1两种形式</span><br><span class="line"></span><br><span class="line">n = 100 #100以内素数</span><br><span class="line">count = 2#因为从5开始所以计数从2开始</span><br><span class="line">x = 5#起步为5</span><br><span class="line">step = 2#规律5    7    11   13 规律为加2加4</span><br><span class="line">primenumbers = [2,3]#给出一个列表（2，3）比较特殊所以从5开始，</span><br><span class="line">while x &lt;= n:#x取值小于等于100（给出的范围值）</span><br><span class="line">    for i in range(3,int(x**0.5)+1,2):#从5开始都是奇数所以2就没必要测试直接从3开始，“这个地方还可以优化，range(3,int(x**0.5)+1,2)可以利用上次求出的值</span><br><span class="line">        if x % i == 0:#如果能整除就说明它是合数</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">        primenumbers.append(x)#在这个列表里追加x取值（追加质数）</span><br><span class="line">        count += 1#计数加1</span><br><span class="line">    x += step#x加2</span><br><span class="line">    step = 4 if step == 2 else 2#step如果刚加完2它现在就是4，如果是4加2</span><br><span class="line">print(count,primenumbers)#循环完打印</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">    25 [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">#大于3的素数只有6N-1和6N+1两种形式</span><br><span class="line"></span><br><span class="line">n = 100 #100以内素数</span><br><span class="line">count = 2</span><br><span class="line">x = 5#起步为5</span><br><span class="line">step = 2#5   7    11  13 规律加2加4</span><br><span class="line">primenumbers = [2,3]#给出一个列表（2，3）比较特殊，从5开始</span><br><span class="line">b = []#把每一次求出的值利用起来，一个合数一定可以分解成几个素数的乘积，也就是说，一个数如果能被一个素数整除就是合数。利用起来上一次求出的值。</span><br><span class="line">while x &lt;= n:#取值范围在小于等于n</span><br><span class="line">    for i in b:#如果可以整出，它就是合数。找到合数的意思</span><br><span class="line">        if x % i == 0:</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">        primenumbers.append(x)#在这个列表里追加x的值</span><br><span class="line">        count += 1#计数加1</span><br><span class="line">        b.append(x)#追加上一次的值</span><br><span class="line">    x += step#x加2</span><br><span class="line">    step = 4 if step == 2 else 2#step如果是2现在是4，如果是4现在是2</span><br><span class="line">print(count,primenumbers)#循环完打印</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">    25 [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">import datetime</span><br><span class="line"></span><br><span class="line">#大于3的素数只有6N-1和6N+1两种形式</span><br><span class="line"></span><br><span class="line">n = 100 #100以内素数</span><br><span class="line">start = datetime.datetime.now()</span><br><span class="line">count = 2</span><br><span class="line">x = 5#起步为5</span><br><span class="line">step = 2</span><br><span class="line">primenumbers = [2,3]</span><br><span class="line">while x &lt;= n:</span><br><span class="line">    for i in range(3,int(x**0.5)+1,2):</span><br><span class="line">        if x % i == 0:</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">        primenumbers.append(x)</span><br><span class="line">        count += 1</span><br><span class="line">    x += step</span><br><span class="line">    step = 4 if step == 2 else 2</span><br><span class="line">print(count,primenumbers)</span><br><span class="line">pdelta = (datetime.datetime.now() - start).total_seconds()</span><br><span class="line">print(&apos;~&apos;*30)</span><br><span class="line">print(delta)</span><br><span class="line"></span><br><span class="line">#大于3的素数只有6N-1和6N+1两种形式</span><br><span class="line">start = datetime.datetime.now()</span><br><span class="line">#n = 100 #100以内素数</span><br><span class="line">count = 2</span><br><span class="line">x = 5#起步为5</span><br><span class="line">step = 2</span><br><span class="line">primenumbers = [2,3]</span><br><span class="line">b = []</span><br><span class="line">while x &lt;= n:</span><br><span class="line">    for i in b:</span><br><span class="line">        if x % i == 0:</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">        primenumbers.append(x)</span><br><span class="line">        count += 1</span><br><span class="line">        b.append(x)</span><br><span class="line">    x += step</span><br><span class="line">    step = 4 if step == 2 else 2</span><br><span class="line">print(count,primenumbers)</span><br><span class="line">pdelta = (datetime.datetime.now() - start).total_seconds()</span><br><span class="line">print(&apos;~&apos;*30)</span><br><span class="line">print(delta)</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">    25 [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]</span><br></pre></td></tr></table></figure>0.00999325 [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~0.009993</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">n = int(input(&apos;&gt;&gt;&apos;))</span><br><span class="line">for i in range(2,n):</span><br><span class="line">    for x in [2,3,5,7]:</span><br><span class="line">        if i % x == 0:</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">        print(i)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#求100以内的素数(错误)</span><br><span class="line">n = int(input(&apos;please input prime number(素数）&gt;&gt;：&apos;))</span><br><span class="line">flag = n * [1]</span><br><span class="line">p = 2</span><br><span class="line">while p &lt;= n:</span><br><span class="line">    print (p)</span><br><span class="line">    for i in range(2*p,n,p):</span><br><span class="line">        flag[i] = 0</span><br><span class="line">    while True:</span><br><span class="line">        p += 1</span><br><span class="line">        if (flag[p]) == 1:</span><br><span class="line">            break</span><br></pre></td></tr></table></figure><pre><code>please input prime number(素数）&gt;&gt;：1002357111317192329313741434753596167717379838997---------------------------------------------------------------------------IndexError                                Traceback (most recent call last)&lt;ipython-input-15-d7d14ec58604&gt; in &lt;module&gt;()      9     while True:     10         p += 1---&gt; 11         if (flag[p]) == 1:     12             breakIndexError: list index out of range</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">n = 100</span><br><span class="line">count = 0</span><br><span class="line">primenumbers = []</span><br><span class="line">for x in range(2,n):</span><br><span class="line">    for i in range(2,int(x**0.5)+1):</span><br><span class="line">        if x % i == 0:</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">            count += 1</span><br><span class="line">            primenumbers.append(x)</span><br><span class="line">print(count)</span><br><span class="line">print(primenumbers)</span><br></pre></td></tr></table></figure><pre><code>25[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;比较2个数的大小&quot;&gt;&lt;a href=&quot;#比较2个数的大小&quot; class=&quot;headerlink&quot; title=&quot;比较2个数的大小&quot;&gt;&lt;/a&gt;比较2个数的大小&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
      
    
    </summary>
    
      <category term="python" scheme="https://hdxgithub.github.io/categories/python/"/>
    
    
      <category term="习题" scheme="https://hdxgithub.github.io/tags/%E4%B9%A0%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>线性结构</title>
    <link href="https://hdxgithub.github.io/2018/08/11/%E7%BA%BF%E6%80%A7%E7%BB%93%E6%9E%84/"/>
    <id>https://hdxgithub.github.io/2018/08/11/线性结构/</id>
    <published>2018-08-11T07:55:09.574Z</published>
    <updated>2018-08-11T07:28:17.197Z</updated>
    
    <content type="html"><![CDATA[<h3 id="线性结构"><a href="#线性结构" class="headerlink" title="线性结构"></a>线性结构</h3><p>切片是对于线性结构来讲</p><p>可迭代的；for     in；可迭代的不一定是线性结构；</p><p>len（）可以获取长度</p><p>通过下标可以访问</p><p>可以切片</p><p>####学过的内置线性结构：</p><p>列表，元组，字符串，bytes，bytearray</p><p>不可变的：元祖，字符串，bytes</p><p>可变的：列表，bytearray</p><h4 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h4><ol><li>通过索引区间访问的线性结构的一段数据</li><li>sequence[start:stop]表示返回[start,stop]区间的子序列</li><li>支持负索引</li><li>start为0，可以省略</li><li>stop为末尾，可以省略</li><li>超过上界（右边界），就取到末尾；超过下界（左边界），取到开头</li><li>start一定要在stop的左边</li><li>[:]表示从头到尾，全部元素被取出。等效于copy()方法</li></ol><h4 id="切片举例"><a href="#切片举例" class="headerlink" title="切片举例"></a>切片举例</h4><p>a[:]可以拷贝一个字序列出来，等效于a.copy()</p><p>print(‘<a href="http://www.0310dreamboy.com&#39;[4:10]" target="_blank" rel="noopener">www.0310dreamboy.com&#39;[4:10]</a>)</p><p>print(‘<a href="http://www.0310dreamboy.com&#39;[:10]" target="_blank" rel="noopener">www.0310dreamboy.com&#39;[:10]</a>)</p><p>print(‘<a href="http://www.0310dreamboy.com&#39;[4:]" target="_blank" rel="noopener">www.0310dreamboy.com&#39;[4:]</a>)</p><p>print(‘<a href="http://www.0310dreamboy.com&#39;[:]" target="_blank" rel="noopener">www.0310dreamboy.com&#39;[:]</a>)</p><p>print(‘<a href="http://www.0310dreamboy.com&#39;[:-1]" target="_blank" rel="noopener">www.0310dreamboy.com&#39;[:-1]</a>)</p><p>print(‘<a href="http://www.0310dreamboy.com&#39;[4:-4]" target="_blank" rel="noopener">www.0310dreamboy.com&#39;[4:-4]</a>)</p><p>print(‘<a href="http://www.0310dreamboy.com&#39;[4:50])右边超过边界好多" target="_blank" rel="noopener">www.0310dreamboy.com&#39;[4:50])右边超过边界好多</a></p><p>print(b’<a href="http://www.0310dreamboy.com&#39;[-40:10])相当于从0到10，左边超过边界好多；返回类型是bytes。取序列是取它子序列并不改变类型。" target="_blank" rel="noopener">www.0310dreamboy.com&#39;[-40:10])相当于从0到10，左边超过边界好多；返回类型是bytes。取序列是取它子序列并不改变类型。</a></p><p>print(bytearray(b’<a href="http://www.0310dreamboy.com&#39;)[-4:10]" target="_blank" rel="noopener">www.0310dreamboy.com&#39;)[-4:10]</a>)</p><p>print(tuple(‘<a href="http://www.0310dreamboy.com&#39;)[-10:10]" target="_blank" rel="noopener">www.0310dreamboy.com&#39;)[-10:10]</a>)</p><p>print(list(‘<a href="http://www.0310dreamboy.com&#39;)[-10:-4]" target="_blank" rel="noopener">www.0310dreamboy.com&#39;)[-10:-4]</a>)</p><p>所谓子序列是copy出来的子序列，他是占内存空间的。</p><h5 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">0310dr</span><br><span class="line">www.0310dr</span><br><span class="line">0310dreamboy.com</span><br><span class="line">www.0310dreamboy.com</span><br><span class="line">www.0310dreamboy.co</span><br><span class="line">0310dreamboy</span><br><span class="line">0310dreamboy.com</span><br><span class="line">b&apos;www.0310dr&apos;</span><br><span class="line">bytearray(b&apos;&apos;)</span><br><span class="line">()</span><br><span class="line">[&apos;e&apos;, &apos;a&apos;, &apos;m&apos;, &apos;b&apos;, &apos;o&apos;, &apos;y&apos;]</span><br></pre></td></tr></table></figure><h4 id="步长切片"><a href="#步长切片" class="headerlink" title="步长切片"></a>步长切片</h4><ul><li>[start:stoop:step]</li><li>step为步长，可以为正，负整数，默认是1</li><li>step要和start：stop同向，否返回空序列</li></ul><p>‘<a href="http://www.0310dreamboy.com&#39;[4:10:2]" target="_blank" rel="noopener">www.0310dreamboy.com&#39;[4:10:2]</a></p><p>list(‘<a href="http://www.0310dreamboy.com&#39;)[4:10:-2]" target="_blank" rel="noopener">www.0310dreamboy.com&#39;)[4:10:-2]</a></p><p>tuple(‘<a href="http://www.0310dreamboy.com&#39;)[-10:-4:2]" target="_blank" rel="noopener">www.0310dreamboy.com&#39;)[-10:-4:2]</a></p><p>b’<a href="http://www.0310dreamboy.com&#39;[-4:-10:2]" target="_blank" rel="noopener">www.0310dreamboy.com&#39;[-4:-10:2]</a></p><p>bytearray(b’<a href="http://www.0310dreamboy.com&#39;)[-4:-10:-2]" target="_blank" rel="noopener">www.0310dreamboy.com&#39;)[-4:-10:-2]</a></p><h4 id="运行结果-1"><a href="#运行结果-1" class="headerlink" title="运行结果"></a>运行结果</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">01d&apos;</span><br><span class="line">[]</span><br><span class="line">(&apos;e&apos;, &apos;m&apos;, &apos;o&apos;)</span><br><span class="line">b&apos;&apos;</span><br><span class="line">bytearray(b&apos;.om&apos;)s</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;线性结构&quot;&gt;&lt;a href=&quot;#线性结构&quot; class=&quot;headerlink&quot; title=&quot;线性结构&quot;&gt;&lt;/a&gt;线性结构&lt;/h3&gt;&lt;p&gt;切片是对于线性结构来讲&lt;/p&gt;
&lt;p&gt;可迭代的；for     in；可迭代的不一定是线性结构；&lt;/p&gt;
&lt;p&gt;len（）可
      
    
    </summary>
    
      <category term="python" scheme="https://hdxgithub.github.io/categories/python/"/>
    
    
      <category term="线性结构" scheme="https://hdxgithub.github.io/tags/%E7%BA%BF%E6%80%A7%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>列表练习</title>
    <link href="https://hdxgithub.github.io/2018/08/10/%E5%88%97%E8%A1%A8%E7%BB%83%E4%B9%A0/"/>
    <id>https://hdxgithub.github.io/2018/08/10/列表练习/</id>
    <published>2018-08-10T07:15:17.000Z</published>
    <updated>2018-08-10T13:00:12.923Z</updated>
    
    <content type="html"><![CDATA[<h3 id="列表练习"><a href="#列表练习" class="headerlink" title="列表练习"></a>列表练习</h3><p>使用列表时尽量使用索引，尽量不要用remove,inserd</p><p>求100内的素数：</p><h3 id="杨辉三角："><a href="#杨辉三角：" class="headerlink" title="杨辉三角："></a>杨辉三角：</h3><p>练习补零；</p><p>知道未来要用多少个，开辟好空间，来替换的效率会很好。</p><p>列表能用的就是索引，知道避免什么，</p><p>列表查询速度快；列表不能一直扩大；不要一直频繁丢弃；一小批一小批处理；要了解内存状况；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;列表练习&quot;&gt;&lt;a href=&quot;#列表练习&quot; class=&quot;headerlink&quot; title=&quot;列表练习&quot;&gt;&lt;/a&gt;列表练习&lt;/h3&gt;&lt;p&gt;使用列表时尽量使用索引，尽量不要用remove,inserd&lt;/p&gt;
&lt;p&gt;求100内的素数：&lt;/p&gt;
&lt;h3 id=&quot;杨辉
      
    
    </summary>
    
      <category term="python" scheme="https://hdxgithub.github.io/categories/python/"/>
    
    
      <category term="列表" scheme="https://hdxgithub.github.io/tags/%E5%88%97%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>元祖</title>
    <link href="https://hdxgithub.github.io/2018/08/09/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%85%83%E7%A5%96%EF%BC%9A/"/>
    <id>https://hdxgithub.github.io/2018/08/09/数据结构元祖：/</id>
    <published>2018-08-09T14:20:33.933Z</published>
    <updated>2018-08-11T08:13:39.494Z</updated>
    
    <content type="html"><![CDATA[<p>数据结构元祖：</p><p>排序算法：一个有序的元素组成的集合；优势更省内存</p><p>元祖是不可变对象；（在什么情况下是可变的；）</p><p>使用（）表示；</p><p>t = tuple()元祖不支持赋值</p><p>容器对象都是一个可迭代是对象；t2 = (2,)一个元素的元组；</p><p>元祖加元祖返回一个新元组，不是就地修改。元祖支持索引（下标）</p><p>元祖不可通过索引赋值；</p><p>元祖是只读的，所以增，删，改方法都没有；</p><p>命名元祖：collections收集；</p><p>from collections import namedtuple;导入</p><p>Point变量，标识符</p><p>_p(x=4,y=5)给人看的，字符串表达形式；.代表对象下面是什么东西</p><p>冒泡法：</p><p>优化点是在哪一趟提前结束</p><p>object:对象；callable:调用</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;数据结构元祖：&lt;/p&gt;
&lt;p&gt;排序算法：一个有序的元素组成的集合；优势更省内存&lt;/p&gt;
&lt;p&gt;元祖是不可变对象；（在什么情况下是可变的；）&lt;/p&gt;
&lt;p&gt;使用（）表示；&lt;/p&gt;
&lt;p&gt;t = tuple()元祖不支持赋值&lt;/p&gt;
&lt;p&gt;容器对象都是一个可迭代是对象；t2 =
      
    
    </summary>
    
      <category term="python" scheme="https://hdxgithub.github.io/categories/python/"/>
    
    
      <category term="数据结构" scheme="https://hdxgithub.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>数字处理函数</title>
    <link href="https://hdxgithub.github.io/2018/08/09/%E6%95%B0%E5%AD%97%E7%9A%84%E5%A4%84%E7%90%86%E5%87%BD%E6%95%B0%EF%BC%9A/"/>
    <id>https://hdxgithub.github.io/2018/08/09/数字的处理函数：/</id>
    <published>2018-08-09T14:20:32.470Z</published>
    <updated>2018-08-11T08:13:02.250Z</updated>
    
    <content type="html"><![CDATA[<p>数字的处理函数：</p><p>import math </p><p>import.floor(floor地板)（）；math.ceil(ceil天花板)（）；</p><p>int(2.5),int(3.5)；取整数部分，小数点以后不关心</p><p>（2，3）</p><p>int(-2.5),int(-3.5)</p><p>(-2,-3)</p><p>3//2</p><p>1</p><p>3//-2</p><p>-2</p><p>“//”这个整除是向下取整</p><p>round()四舍六入，五取偶；</p><p>“/”表示自然除，</p><p>列表list:</p><p>列表就像一个排列整齐的队伍；</p><p>可索引，线性结构，可变可迭代的，</p><p>lst = []表示空列表/比较常用</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;数字的处理函数：&lt;/p&gt;
&lt;p&gt;import math &lt;/p&gt;
&lt;p&gt;import.floor(floor地板)（）；math.ceil(ceil天花板)（）；&lt;/p&gt;
&lt;p&gt;int(2.5),int(3.5)；取整数部分，小数点以后不关心&lt;/p&gt;
&lt;p&gt;（2，3）&lt;/p
      
    
    </summary>
    
      <category term="python" scheme="https://hdxgithub.github.io/categories/python/"/>
    
    
      <category term="数字处理" scheme="https://hdxgithub.github.io/tags/%E6%95%B0%E5%AD%97%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>杨辉三角</title>
    <link href="https://hdxgithub.github.io/2018/08/09/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E5%BD%A2/"/>
    <id>https://hdxgithub.github.io/2018/08/09/杨辉三角形/</id>
    <published>2018-08-09T14:20:28.793Z</published>
    <updated>2018-08-11T08:14:20.873Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">一行一行追加，通过上一行算出下一行。</span><br><span class="line">n = int(input(&apos;&gt;&gt;&apos;))  #输入几行</span><br><span class="line"></span><br><span class="line">a = [[1],[1,1]]       #第0行和第行，特殊的两行</span><br><span class="line">for i in range(2,n):  #从第2行开始循环到第n行</span><br><span class="line">    b=a[i-1]           #b = [1,1]每次求的那行的上一行</span><br><span class="line">    c=[1]              #行首1</span><br><span class="line">    for j in range(i-1):#每一行循环几次</span><br><span class="line">        c.append(b[j]+b[j+1])#每一次循环得到的数（每一行的中间几个数）</span><br><span class="line">    c.append(1)          #行尾追加1</span><br><span class="line">    a.append(c)          #在a这个大列表当中追加每一行地数</span><br><span class="line">for x in a:              </span><br><span class="line">    print(x)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="python" scheme="https://hdxgithub.github.io/categories/python/"/>
    
    
      <category term="杨辉三角" scheme="https://hdxgithub.github.io/tags/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/"/>
    
  </entry>
  
</feed>
